{"ast":null,"code":"import { ApiService } from '../../services/api.service';\nimport { ToastService } from '../../services/toast.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"../../services/toast.service\";\nfunction AdminInviteComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const r_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", r_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(r_r1);\n  }\n}\nexport let AdminInviteComponent = /*#__PURE__*/(() => {\n  class AdminInviteComponent {\n    constructor(api, toast) {\n      this.api = api;\n      this.toast = toast;\n      this.name = '';\n      this.email = '';\n      this.password = '';\n      this.role = 'user';\n      this.roles = ['admin', 'dietician', 'vendor', 'kitchen', 'delivery', 'user'];\n      this.loading = false;\n    }\n    submit(e) {\n      e.preventDefault();\n      if (!this.name || !this.email || !this.password) {\n        this.toast.error('All fields required');\n        return;\n      }\n      this.loading = true;\n      this.api.post('/users', {\n        name: this.name,\n        email: this.email,\n        password: this.password,\n        role: this.role\n      }).subscribe(() => {\n        this.loading = false;\n        this.toast.success('User created');\n        this.name = this.email = this.password = '';\n        this.role = 'user';\n      }, err => {\n        this.loading = false;\n        this.toast.error(err?.error?.message || 'Failed');\n      });\n    }\n    static {\n      this.ɵfac = function AdminInviteComponent_Factory(t) {\n        return new (t || AdminInviteComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ToastService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AdminInviteComponent,\n        selectors: [[\"app-admin-invite\"]],\n        decls: 29,\n        vars: 6,\n        consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-12\", \"col-md-8\", \"col-lg-6\"], [1, \"card\"], [1, \"card-body\"], [1, \"mb-3\"], [3, \"submit\"], [1, \"form-label\"], [\"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-4\"], [\"name\", \"role\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-text\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"]],\n        template: function AdminInviteComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n            i0.ɵɵtext(6, \"Create a new user\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"form\", 6);\n            i0.ɵɵlistener(\"submit\", function AdminInviteComponent_Template_form_submit_7_listener($event) {\n              return ctx.submit($event);\n            });\n            i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 7);\n            i0.ɵɵtext(10, \"Full name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"input\", 8);\n            i0.ɵɵlistener(\"ngModelChange\", function AdminInviteComponent_Template_input_ngModelChange_11_listener($event) {\n              return ctx.name = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 7);\n            i0.ɵɵtext(14, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"input\", 9);\n            i0.ɵɵlistener(\"ngModelChange\", function AdminInviteComponent_Template_input_ngModelChange_15_listener($event) {\n              return ctx.email = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\", 7);\n            i0.ɵɵtext(18, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"input\", 10);\n            i0.ɵɵlistener(\"ngModelChange\", function AdminInviteComponent_Template_input_ngModelChange_19_listener($event) {\n              return ctx.password = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(20, \"div\", 11)(21, \"label\", 7);\n            i0.ɵɵtext(22, \"Role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"select\", 12);\n            i0.ɵɵlistener(\"ngModelChange\", function AdminInviteComponent_Template_select_ngModelChange_23_listener($event) {\n              return ctx.role = $event;\n            });\n            i0.ɵɵtemplate(24, AdminInviteComponent_option_24_Template, 2, 2, \"option\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"div\", 14);\n            i0.ɵɵtext(26, \"Only admins can set roles here.\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(27, \"button\", 15);\n            i0.ɵɵtext(28, \"Create user\");\n            i0.ɵɵelementEnd()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"ngModel\", ctx.name);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.email);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.password);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.role);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"disabled\", ctx.loading);\n          }\n        },\n        styles: [\".card[_ngcontent-%COMP%]{border-radius:8px}\"]\n      });\n    }\n  }\n  return AdminInviteComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}