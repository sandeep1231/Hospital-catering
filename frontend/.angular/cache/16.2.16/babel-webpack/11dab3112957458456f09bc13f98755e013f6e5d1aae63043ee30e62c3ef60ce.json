{"ast":null,"code":"import _asyncToGenerator from \"D:/catering/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ApiService } from '../../services/api.service';\nimport { ToastService } from '../../services/toast.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"../../services/toast.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction DietPlanEditorComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const p_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", p_r4._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\"\", p_r4.name, \" \\u2014 \", p_r4.ward || \"\", \"/\", p_r4.bed || \"\", \"\");\n  }\n}\nfunction DietPlanEditorComponent_div_39_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"input\", 33);\n    i0.ɵɵlistener(\"change\", function DietPlanEditorComponent_div_39_div_4_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r7 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.toggleDay(i_r7));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 34);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const d_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"day\" + i_r7)(\"checked\", ctx_r5.selectedDays.includes(i_r7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"day\" + i_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(d_r6);\n  }\n}\nfunction DietPlanEditorComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"label\", 7);\n    i0.ɵɵtext(2, \"Repeat on\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 30);\n    i0.ɵɵtemplate(4, DietPlanEditorComponent_div_39_div_4_Template, 4, 4, \"div\", 31);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.week);\n  }\n}\nfunction DietPlanEditorComponent_div_43_label_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 32)(1, \"input\", 47);\n    i0.ɵɵlistener(\"change\", function DietPlanEditorComponent_div_43_label_14_Template_input_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const m_r13 = restoredCtx.$implicit;\n      const meal_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.toggleItem(meal_r10.items, m_r13._id, $event.target == null ? null : $event.target[\"checked\"]));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 48);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const m_r13 = ctx.$implicit;\n    const meal_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r12.isChecked(meal_r10.items, m_r13._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(m_r13.name);\n  }\n}\nfunction DietPlanEditorComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"div\", 36)(2, \"div\", 37)(3, \"select\", 38);\n    i0.ɵɵlistener(\"ngModelChange\", function DietPlanEditorComponent_div_43_Template_select_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const meal_r10 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(meal_r10.slot = $event);\n    });\n    i0.ɵɵelementStart(4, \"option\", 39);\n    i0.ɵɵtext(5, \"Breakfast\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"option\", 40);\n    i0.ɵɵtext(7, \"Lunch\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"option\", 41);\n    i0.ɵɵtext(9, \"Dinner\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"option\", 42);\n    i0.ɵɵtext(11, \"Snack\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 43)(13, \"div\", 44);\n    i0.ɵɵtemplate(14, DietPlanEditorComponent_div_43_label_14_Template, 4, 2, \"label\", 31);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 45)(16, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function DietPlanEditorComponent_div_43_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const idx_r11 = restoredCtx.index;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.removeMeal(idx_r11));\n    });\n    i0.ɵɵtext(17, \"Remove\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const meal_r10 = ctx.$implicit;\n    const idx_r11 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"slot\", idx_r11, \"\");\n    i0.ɵɵproperty(\"ngModel\", meal_r10.slot);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.menu);\n  }\n}\nfunction DietPlanEditorComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 49);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r3.message, i0.ɵɵsanitizeHtml);\n  }\n}\nexport let DietPlanEditorComponent = /*#__PURE__*/(() => {\n  class DietPlanEditorComponent {\n    constructor(api, toast, router) {\n      this.api = api;\n      this.toast = toast;\n      this.router = router;\n      this.patients = [];\n      this.menu = [];\n      this.message = '';\n      this.week = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n      this.selectedDays = [];\n      this.model = {\n        name: '',\n        patientId: '',\n        startDate: this.toDateInput(new Date()),\n        endDate: '',\n        recurrence: 'weekly',\n        meals: [{\n          slot: 'breakfast',\n          items: []\n        }]\n      };\n    }\n    ngOnInit() {\n      this.loadPatients();\n      this.loadMenu();\n    }\n    toDateInput(d) {\n      const yyyy = d.getFullYear();\n      const mm = String(d.getMonth() + 1).padStart(2, '0');\n      const dd = String(d.getDate()).padStart(2, '0');\n      return `${yyyy}-${mm}-${dd}`;\n    }\n    loadPatients() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.api.get('/patients').subscribe(res => _this.patients = res, console.error);\n      })();\n    }\n    loadMenu() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        _this2.api.get('/menu').subscribe(res => _this2.menu = res, console.error);\n      })();\n    }\n    addMeal() {\n      this.model.meals.push({\n        slot: 'breakfast',\n        items: []\n      });\n    }\n    removeMeal(i) {\n      this.model.meals.splice(i, 1);\n    }\n    toggleDay(i) {\n      const idx = this.selectedDays.indexOf(i);\n      if (idx === -1) this.selectedDays.push(i);else this.selectedDays.splice(idx, 1);\n    }\n    isChecked(arr, id) {\n      return Array.isArray(arr) && arr.includes(id);\n    }\n    toggleItem(arr, id, checked) {\n      if (!Array.isArray(arr)) return;\n      const i = arr.indexOf(id);\n      if (checked && i === -1) arr.push(id);\n      if (!checked && i !== -1) arr.splice(i, 1);\n    }\n    buildDays() {\n      if (this.model.recurrence === 'weekly') {\n        if (this.selectedDays.length === 0) return [{\n          dayIndex: 0,\n          meals: this.cloneMeals()\n        }];\n        return this.selectedDays.map(d => ({\n          dayIndex: d,\n          meals: this.cloneMeals()\n        }));\n      }\n      return [{\n        dayIndex: 0,\n        meals: this.cloneMeals()\n      }];\n    }\n    cloneMeals() {\n      return this.model.meals.map(m => ({\n        slot: m.slot,\n        items: Array.isArray(m.items) ? m.items : [m.items].filter(Boolean)\n      }));\n    }\n    save(e) {\n      e.preventDefault();\n      const payload = {\n        name: this.model.name,\n        patientId: this.model.patientId || undefined,\n        startDate: this.model.startDate,\n        endDate: this.model.endDate || undefined,\n        recurrence: this.model.recurrence,\n        days: this.buildDays(),\n        notes: ''\n      };\n      this.api.post('/diet-plans', payload).subscribe(res => {\n        const created = res?.createdOrder;\n        if (created) {\n          this.toast.success('Plan saved and today\\'s order created.');\n          this.message = `Order created for ${new Date(created.date).toLocaleDateString()}. <a routerLink='/orders'>View orders</a>`;\n        } else {\n          this.toast.success('Plan saved');\n          this.message = 'Plan saved.';\n        }\n        setTimeout(() => this.message = '', 4000);\n        this.reset(false);\n      }, err => {\n        console.error(err);\n        this.toast.error('Save failed');\n      });\n    }\n    reset(clearName = true) {\n      if (clearName) {\n        this.model = {\n          name: '',\n          patientId: '',\n          startDate: this.toDateInput(new Date()),\n          endDate: '',\n          recurrence: 'weekly',\n          meals: [{\n            slot: 'breakfast',\n            items: []\n          }]\n        };\n        this.selectedDays = [];\n      } else {\n        this.model.meals = [{\n          slot: 'breakfast',\n          items: []\n        }];\n        this.selectedDays = [];\n      }\n    }\n    static {\n      this.ɵfac = function DietPlanEditorComponent_Factory(t) {\n        return new (t || DietPlanEditorComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ToastService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DietPlanEditorComponent,\n        selectors: [[\"app-diet-plan-editor\"]],\n        decls: 53,\n        vars: 9,\n        consts: [[1, \"d-flex\", \"mb-3\"], [1, \"me-auto\"], [1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 3, \"click\"], [1, \"card\", \"p-3\"], [3, \"submit\"], [1, \"row\", \"g-3\"], [1, \"col-12\", \"col-md-6\"], [1, \"form-label\"], [\"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"patientId\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"col-md-4\"], [\"type\", \"date\", \"name\", \"startDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"endDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"recurrence\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"none\"], [\"value\", \"daily\"], [\"value\", \"weekly\"], [\"value\", \"monthly\"], [\"class\", \"col-12\", 4, \"ngIf\"], [1, \"col-12\"], [\"class\", \"card mb-2 p-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"btn-sm\", 3, \"click\"], [1, \"col-12\", \"text-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"me-2\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-success mt-3\", 3, \"innerHTML\", 4, \"ngIf\"], [3, \"value\"], [1, \"d-flex\", \"flex-wrap\", \"gap-2\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-check\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"checked\", \"change\"], [1, \"form-check-label\", \"ms-1\", 3, \"for\"], [1, \"card\", \"mb-2\", \"p-2\"], [1, \"row\", \"g-2\", \"align-items-center\"], [1, \"col-12\", \"col-md-3\"], [1, \"form-select\", 3, \"ngModel\", \"name\", \"ngModelChange\"], [\"value\", \"breakfast\"], [\"value\", \"lunch\"], [\"value\", \"dinner\"], [\"value\", \"snack\"], [1, \"col-12\", \"col-md-7\"], [1, \"d-flex\", \"flex-wrap\", \"gap-3\"], [1, \"col-12\", \"col-md-2\", \"text-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [1, \"ms-2\"], [1, \"alert\", \"alert-success\", \"mt-3\", 3, \"innerHTML\"]],\n        template: function DietPlanEditorComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n            i0.ɵɵtext(2, \"Diet Plan Editor\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"button\", 2);\n            i0.ɵɵlistener(\"click\", function DietPlanEditorComponent_Template_button_click_3_listener() {\n              return ctx.reset();\n            });\n            i0.ɵɵtext(4, \"New\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n            i0.ɵɵlistener(\"submit\", function DietPlanEditorComponent_Template_form_submit_6_listener($event) {\n              return ctx.save($event);\n            });\n            i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"label\", 7);\n            i0.ɵɵtext(10, \"Plan name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"input\", 8);\n            i0.ɵɵlistener(\"ngModelChange\", function DietPlanEditorComponent_Template_input_ngModelChange_11_listener($event) {\n              return ctx.model.name = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 7);\n            i0.ɵɵtext(14, \"Patient (optional)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"select\", 9);\n            i0.ɵɵlistener(\"ngModelChange\", function DietPlanEditorComponent_Template_select_ngModelChange_15_listener($event) {\n              return ctx.model.patientId = $event;\n            });\n            i0.ɵɵelementStart(16, \"option\", 10);\n            i0.ɵɵtext(17, \"-- Unassigned --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(18, DietPlanEditorComponent_option_18_Template, 2, 4, \"option\", 11);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"div\", 12)(20, \"label\", 7);\n            i0.ɵɵtext(21, \"Start date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"input\", 13);\n            i0.ɵɵlistener(\"ngModelChange\", function DietPlanEditorComponent_Template_input_ngModelChange_22_listener($event) {\n              return ctx.model.startDate = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(23, \"div\", 12)(24, \"label\", 7);\n            i0.ɵɵtext(25, \"End date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"input\", 14);\n            i0.ɵɵlistener(\"ngModelChange\", function DietPlanEditorComponent_Template_input_ngModelChange_26_listener($event) {\n              return ctx.model.endDate = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(27, \"div\", 12)(28, \"label\", 7);\n            i0.ɵɵtext(29, \"Recurrence\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(30, \"select\", 15);\n            i0.ɵɵlistener(\"ngModelChange\", function DietPlanEditorComponent_Template_select_ngModelChange_30_listener($event) {\n              return ctx.model.recurrence = $event;\n            });\n            i0.ɵɵelementStart(31, \"option\", 16);\n            i0.ɵɵtext(32, \"None (single day)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(33, \"option\", 17);\n            i0.ɵɵtext(34, \"Daily\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(35, \"option\", 18);\n            i0.ɵɵtext(36, \"Weekly\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"option\", 19);\n            i0.ɵɵtext(38, \"Monthly\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(39, DietPlanEditorComponent_div_39_Template, 5, 1, \"div\", 20);\n            i0.ɵɵelementStart(40, \"div\", 21)(41, \"label\", 7);\n            i0.ɵɵtext(42, \"Meals (check menu items)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(43, DietPlanEditorComponent_div_43_Template, 18, 3, \"div\", 22);\n            i0.ɵɵelementStart(44, \"div\", 23)(45, \"button\", 24);\n            i0.ɵɵlistener(\"click\", function DietPlanEditorComponent_Template_button_click_45_listener() {\n              return ctx.addMeal();\n            });\n            i0.ɵɵtext(46, \"+ Add meal slot\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(47, \"div\", 25)(48, \"button\", 26);\n            i0.ɵɵlistener(\"click\", function DietPlanEditorComponent_Template_button_click_48_listener() {\n              return ctx.reset();\n            });\n            i0.ɵɵtext(49, \"Reset\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(50, \"button\", 27);\n            i0.ɵɵtext(51, \"Save Plan\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵtemplate(52, DietPlanEditorComponent_div_52_Template, 1, 1, \"div\", 28);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"ngModel\", ctx.model.name);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.model.patientId);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.model.startDate);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.model.endDate);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.model.recurrence);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngIf\", ctx.model.recurrence === \"weekly\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.model.meals);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngIf\", ctx.message);\n          }\n        },\n        dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n        encapsulation: 2\n      });\n    }\n  }\n  return DietPlanEditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}